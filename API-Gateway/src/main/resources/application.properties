server.port=8082
spring.application.name=api-gateway
eureka.client.serviceUrl.defaultZone=http://localhost:8010/eureka
#token secret value
token.secret=hfgry463hf746hf573ydh475fhy5739hfgry463hf746hf573ydh475fhy5739hfgry463hf746hf573ydh475fhy5739

# bootstrap.properties file configuration
spring.config.import=optional:configserver:http://localhost:8012

# Spring Boot actuator config
management.endpoint.gateway.enabled=true
# This will expose only one API endpoint that is called gateway
# You can use * to enable all api endpoints of actuator
# mappings can be useful for debugging purposes bcz it allows you to see all of the req mappings that have been 
# registered in your application
management.endpoints.web.exposure.include=gateway, health, mappings, info

# RabbitMQ server config
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.cloud.gateway.routes[0].id=users-microservice
spring.cloud.gateway.routes[0].uri=lb://users-microservice
spring.cloud.gateway.routes[0].predicates[0]=Path=/users-microservice/users
spring.cloud.gateway.routes[0].predicates[1]=Method=POST
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-microservice/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[1].id=h2-console
spring.cloud.gateway.routes[1].uri=lb://users-microservice
spring.cloud.gateway.routes[1].predicates[0]=Path=/users-microservice/h2-console
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[1].filters[1]=RewritePath=/users-microservice/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[2].id=users-status-check
spring.cloud.gateway.routes[2].uri = lb://users-microservice
spring.cloud.gateway.routes[2].predicates[0]=Path=/users-microservice/users/status/check
spring.cloud.gateway.routes[2].predicates[1]=Method=GET
spring.cloud.gateway.routes[2].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[2].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[2].filters[1]=RewritePath=/users-microservice/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[2].filters[2]=AuthorizationHeaderFilter

spring.cloud.gateway.routes[3].id=users-microservice-createuser
spring.cloud.gateway.routes[3].uri=lb://users-microservice
spring.cloud.gateway.routes[3].predicates[0]=Path=/users-microservice/users/createusers
spring.cloud.gateway.routes[3].predicates[1]=Method=POST
spring.cloud.gateway.routes[3].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[3].filters[1]=RewritePath=/users-microservice/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[4].id=users-microservice-login
spring.cloud.gateway.routes[4].uri=lb://users-microservice
spring.cloud.gateway.routes[4].predicates[0]=Path=/users-microservice/users/login
spring.cloud.gateway.routes[4].predicates[1]=Method=POST
spring.cloud.gateway.routes[4].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[4].filters[1]=RewritePath=/users-microservice/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[5].id=users-microservice-actuator
spring.cloud.gateway.routes[5].uri=lb://users-microservice
spring.cloud.gateway.routes[5].predicates[0]=Path=/users-microservice/actuator/**
spring.cloud.gateway.routes[5].predicates[1]=Method=GET
spring.cloud.gateway.routes[5].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[5].filters[1]=RewritePath=/users-microservice/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[6].id=get-single-user
spring.cloud.gateway.routes[6].uri = lb://users-microservice
spring.cloud.gateway.routes[6].predicates[0]=Path=/users-microservice/users/**
spring.cloud.gateway.routes[6].predicates[1]=Method=GET,PUT
spring.cloud.gateway.routes[6].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[6].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[6].filters[1]=RewritePath=/users-microservice/(?<segment>.*), /$\{segment}
spring.cloud.gateway.routes[6].filters[2]=AuthorizationHeaderFilter=ROLE_ADMIN

spring.cloud.gateway.routes[7].id = albums-ws
spring.cloud.gateway.routes[7].uri = lb://albums-ws
spring.cloud.gateway.routes[7].predicates[0]=Path=/albums-ws/**
spring.cloud.gateway.routes[7].predicates[1]=Method=POST,GET,PUT,DELETE
spring.cloud.gateway.routes[7].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[7].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[7].filters[1]=AuthorizationHeaderFilter
spring.cloud.gateway.routes[7].filters[2]=RewritePath=/albums-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[8].id=delete-single-user
spring.cloud.gateway.routes[8].uri = lb://users-microservice
spring.cloud.gateway.routes[8].predicates[0]=Path=/users-microservice/users/**
spring.cloud.gateway.routes[8].predicates[1]=Method=DELETE
spring.cloud.gateway.routes[8].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[8].filters[0]=RemoveRequestHeader=Cookie
spring.cloud.gateway.routes[8].filters[1]=AuthorizationHeaderFilter=ROLE_ADMIN DELETE ROLE_USER DELETE
spring.cloud.gateway.routes[8].filters[2]=RewritePath=/users-microservice/(?<segment>.*), /$\{segment}


# This will make our Spring Cloud API gateway automatically map and route the Http request to a destination.
#spring.cloud.gateway.discovery.locator.enabled=true
# It sets lowercase letters in service name in the URL of out Http request
#spring.cloud.gateway.discovery.locator.lower-case-service-id=true
